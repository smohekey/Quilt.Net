<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace Quilt.Utilities {
	using System.Collections.Generic;

	public static class EnumerableDeconstructExtensions {
	
<#
	for(var i = 1; i < 8 + 1; i++) {
		var parameters = string.Join("", Enumerable.Range(0, i).Select(j => $", out T? v{j}"));
#>
		public static void Deconstruct<T>(this IEnumerable<T> @this<#=parameters#>) where T : struct {
			<# for(var j = 0; j < i; j++) { #>v<#=j#> = default;
			<# } #>

			var e = @this.GetEnumerator();
<# for(var j = 0; j < i; j++) { #>

			if (!e.MoveNext()) {
				return;
			}

			v<#=j#> = e.Current;
<# } #>
		}
		
		public static void Deconstruct<T>(this IEnumerable<T> @this<#=parameters#>) where T : class {
			<# for(var j = 0; j < i; j++) { #>v<#=j#> = default;
			<# } #>

			var e = @this.GetEnumerator();
<# for(var j = 0; j < i; j++) { #>

			if (!e.MoveNext()) {
				return;
			}

			v<#=j#> = e.Current;
<# } #>
		}
<# } #>
	}
}